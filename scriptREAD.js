window.addEventListener('scroll', () => {
	const progressBar = document.getElementById('progressbar');
	const totalHeight = document.body.scrollHeight - window.innerHeight;
	const progress = (window.scrollY / totalHeight) * 100;
	progressBar.style.width = progress + '%';
});

//–Ω–∞–∑–∞–¥
document.querySelector('.back-btn').addEventListener('click', () => {
	window.location.href = 'index.html';
});

// –õ–∏—Å—Ç–∞–Ω–∏–µ –≥–ª–∞–≤—ã –≤–ª–µ–≤–æ
document.querySelector('.toggler-left a').addEventListener('click', (e) => {
	e.preventDefault();
	window.location.href = 'index.html';
});

// –õ–∏—Å—Ç–∞–Ω–∏–µ –≥–ª–∞–≤—ã –≤–ø—Ä–∞–≤–æ
document.querySelector('.toggler-right a').addEventListener('click', (e) => {
	e.preventDefault();
	alert('–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –≥–ª–∞–≤—É.');
});

// –ó–∞–∫–ª–∞–¥–∫–∞
document.addEventListener('DOMContentLoaded', () => {
	const currentUrl = window.location.href;
	const savedUrl = localStorage.getItem('bookmarkUrl');
	const bookmarkBtn = document.querySelector('.bookmark');

	if (savedUrl === currentUrl) {
		bookmarkBtn.classList.add('active');
	}
});

document.querySelector('.bookmark').addEventListener('click', () => {
	const bookmarkBtn = document.querySelector('.bookmark');
	const currentUrl = window.location.href;
	const savedUrl = localStorage.getItem('bookmarkUrl');

	if (savedUrl === currentUrl) {
		localStorage.removeItem('bookmarkUrl');
		bookmarkBtn.classList.remove('active');
	} else {
		localStorage.setItem('bookmarkUrl', currentUrl);
		bookmarkBtn.classList.add('active');
	}
});

//–°–º–µ–Ω–∞ —Ç–µ–º—ã
const themeBtn = document.querySelector('.changeTheme');

const savedTheme = localStorage.getItem('theme');
const systemDark = window.matchMedia('(prefers-color-scheme: dark)').matches;

if (savedTheme) {
	document.body.classList.toggle('light-theme', savedTheme === 'light');
} else {
	document.body.classList.toggle('light-theme', !systemDark);
}

themeBtn.addEventListener('click', () => {
	const isLight = document.body.classList.toggle('light-theme');
	const theme = isLight ? 'light' : 'dark';
	localStorage.setItem('theme', theme);
});

window
	.matchMedia('(prefers-color-scheme: dark)')
	.addEventListener('change', (e) => {
		if (!localStorage.getItem('theme')) {
			document.body.classList.toggle('light-theme', !e.matches);
		}
	});

// –ë–µ—Å–µ–¥–∞
document.querySelector('.conversation').addEventListener('click', () => {
	window.location.href = 'discussion.html';
});

//–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
function copyCode(button) {
	const codeBlock = button.previousElementSibling;
	const code = codeBlock.innerText;
	navigator.clipboard.writeText(code).then(() => {
		button.textContent = '‚úÖ';
		setTimeout(() => {
			button.textContent = 'üìã';
		}, 1500);
	});
}

function randomBlink() {
	const path1 = document.getElementById('path1');
	const path2 = document.getElementById('path2');

	// –ê–Ω–∏–º–∞—Ü–∏—è –º–∏–≥–∞–Ω–∏—è
	path1.style.opacity = '0';
	path2.style.opacity = '1';

	setTimeout(() => {
		path1.style.opacity = '1';
		path2.style.opacity = '0';
	}, 300); // –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–∏–≥–∞–Ω–∏—è (0.3s)

	// –°–ª—É—á–∞–π–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–∏–≥–∞–Ω–∏—è (3-10 —Å–µ–∫—É–Ω–¥)
	const nextTime = 3000 + Math.random() * 7000;
	setTimeout(randomBlink, nextTime);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π —Ä–∞–∑ —á–µ—Ä–µ–∑ —Å–ª—É—á–∞–π–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
setTimeout(randomBlink, 3000 + Math.random() * 7000);
